<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.temenos.interaction</groupId>
	<artifactId>interaction</artifactId>
	<version>201805.0.0</version>
	<packaging>pom</packaging>

	<name>IRIS</name>
	<url>http://temenostech.temenos.com/IRIS</url>

	<!-- Project inception -->
	<inceptionYear>2012</inceptionYear>
	<organization>
		<name>Temenos Holdings N.V.</name>
		<url>http://www.temenos.com</url>
	</organization>

	<licenses>
		<license>
			<name>GNU Affero General Public License v3</name>
			<url>http://www.gnu.org/licenses/agpl-3.0.html</url>
		</license>
	</licenses>

	<properties>
		<license.licenseName>agpl_v3</license.licenseName>
		<!-- Sonar Config -->
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.host.url>${sonar.url}</sonar.host.url>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
		<sonar-jacoco-plugin.version>2.3</sonar-jacoco-plugin.version>
		<jacoco.version>0.7.4.201502262128</jacoco.version>
		<jacoco.outputDir>${project.build.directory}/jacoco</jacoco.outputDir>
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
	</properties>

	<modules>
		<module>interaction-parent</module>
	</modules>

	<distributionManagement>
		<site>
			<id>interaction-framework</id>
			<url>file://localhost/c:/temp/iris/site</url>
		</site>
	</distributionManagement>

	<build>
		<plugins>
			<!--  Skip the deployment -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>  
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.8</version>
				<!--
					Fix for test's re-run
					http://jira.codehaus.org/browse/SUREFIRE-257
				-->
				<reportSets>
					<reportSet>
						<reports>
							<report>report-only</report>
						</reports>
					</reportSet>
				</reportSets>
				<!--
					End of :Fix for test's re-run
					http://jira.codehaus.org/browse/SUREFIRE-257
				-->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>emma-maven-plugin</artifactId>
				<version>1.0-alpha-3</version>
				<inherited>true</inherited>
			</plugin>
		</plugins>
	</reporting>

	<profiles>    
		<!-- SONAR TEST COVERAGE PROFILE-->
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.13</version>
						<configuration>
							<argLine>${jacoco.agent.ut.arg}</argLine>
							<!-- Specific to generate mapping between tests and covered code -->
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
							<includes>
								<include>**/*.class</include>
							</includes>
							<excludedGroups>com.temenos.annotation.type.IntegrationTest</excludedGroups>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.surefire</groupId>
								<artifactId>surefire-junit47</artifactId>
								<version>2.12</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.16</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.surefire</groupId>
								<artifactId>surefire-junit47</artifactId>
								<version>2.12</version>
							</dependency>
						</dependencies>
						<configuration>
							<groups>com.temenos.annotation.type.IntegrationTest</groups>
							<argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}</argLine>
							<!-- Specific to generate mapping between tests and covered code -->
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
							<!-- Let's put failsafe reports with surefire to have access to tests failures/success reports in sonar -->
							<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
							<includes>
								<include>**/*.class</include>
							</includes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info to be passed to the JVM hosting the code being tested -->
							<execution>
								<id>prepare-ut-agent</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.reportPath}</destFile>
									<propertyName>jacoco.agent.ut.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<!-- Prepares a variable, jacoco.agent.it.arg, that contains the info to be passed to the JVM hosting the code
							being tested. -->
							<execution>
								<id>prepare-it-agent</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.itReportPath}</destFile>
									<propertyName>jacoco.agent.it.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>2.6</version>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>${sonar-jacoco-listeners.version}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-plugin</artifactId>
					<version>${sonar-jacoco-plugin.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<!-- The Configuration of the development profile -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!--
					Specifies the build.profile.id property that must be equal than the name of
					the directory that contains the profile specific configuration file.
					Because the name of the directory that contains the configuration file of the
					development profile is dev, we must set the value of the build.profile.id
					property to dev.
				-->
				<build.profile.id>dev</build.profile.id>
				<!--
					Only unit tests are run when the development profile is active
				-->
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<!-- The Configuration of the skip all tests profile -->        
		<profile>
			<id>skipTests</id>
			<properties>
				<!--
					Specifies the build.profile.id property that must be equal than the name of
					the directory that contains the profile specific configuration file.
					Because the name of the directory that contains the configuration file of the
					development profile is dev, we must set the value of the build.profile.id
					property to dev.
				-->
				<build.profile.id>skipTests</build.profile.id>
				<!--
					Skip all unit tests and integration tests
				-->
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
		<!-- The Configuration of the integration-test profile -->
		<profile>
			<id>integration-test</id>
			<properties>
				<!--
					Specifies the build.profile.id property that must be equal than the name of
					the directory that contains the profile specific configuration file.
					Because the name of the directory that contains the configuration file of the
					integration-test profile is integration-test, we must set the value of the
					build.profile.id property to integration-test.
				-->
				<build.profile.id>integration-test</build.profile.id>
				<!--
					Only integration tests are run when the integration-test profile is active
				-->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
	</profiles>

</project>
